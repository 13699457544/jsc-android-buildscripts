diff -aur target-org/webkit/Source/JavaScriptCore/CMakeLists.txt webkit/Source/JavaScriptCore/CMakeLists.txt
--- target-org/webkit/Source/JavaScriptCore/CMakeLists.txt	2017-06-27 13:37:42.000000000 +0200
+++ webkit/Source/JavaScriptCore/CMakeLists.txt	2017-06-27 13:39:41.000000000 +0200
@@ -1543,7 +1543,7 @@
 
 target_include_directories(LLIntOffsetsExtractor PRIVATE ${JavaScriptCore_INCLUDE_DIRECTORIES})
 
-add_subdirectory(shell)
+# add_subdirectory(shell)
 
 WEBKIT_WRAP_SOURCELIST(${JavaScriptCore_SOURCES})
 WEBKIT_FRAMEWORK(JavaScriptCore)
@@ -1555,6 +1555,7 @@
         install(TARGETS JavaScriptCore DESTINATION "${LIB_INSTALL_DIR}")
     endif ()
 endif ()
+set_target_properties(JavaScriptCore PROPERTIES OUTPUT_NAME jsc)
 
 # Force staging of shared scripts, even if they aren't directly used to build JavaScriptCore.
 
diff -aur target-org/webkit/Source/WTF/wtf/Assertions.cpp webkit/Source/WTF/wtf/Assertions.cpp
--- target-org/webkit/Source/WTF/wtf/Assertions.cpp	2017-06-27 13:38:14.000000000 +0200
+++ webkit/Source/WTF/wtf/Assertions.cpp	2017-06-27 13:39:41.000000000 +0200
@@ -74,7 +74,6 @@
 #endif
 
 #if HAVE(BACKTRACE)
-#include <execinfo.h>
 #endif
 
 extern "C" {
diff -aur target-org/webkit/Source/WTF/wtf/PlatformUserPreferredLanguagesUnix.cpp webkit/Source/WTF/wtf/PlatformUserPreferredLanguagesUnix.cpp
--- target-org/webkit/Source/WTF/wtf/PlatformUserPreferredLanguagesUnix.cpp	2017-06-27 13:38:15.000000000 +0200
+++ webkit/Source/WTF/wtf/PlatformUserPreferredLanguagesUnix.cpp	2017-07-05 12:45:34.000000000 +0200
@@ -24,24 +24,29 @@
 #include <locale.h>
 #include <wtf/Vector.h>
 #include <wtf/text/WTFString.h>
+#include <sys/system_properties.h>
 
 namespace WTF {
 
 void setPlatformUserPreferredLanguagesChangedCallback(void (*)()) { }
 
-// Using pango_language_get_default() here is not an option, because
-// it doesn't support changing the locale in runtime, so it returns
-// always the same value.
 static String platformLanguage()
 {
-    String localeDefault(setlocale(LC_CTYPE, nullptr));
-    if (localeDefault.isEmpty() || equalIgnoringASCIICase(localeDefault, "C") || equalIgnoringASCIICase(localeDefault, "POSIX"))
+    char buf[2 * (PROP_VALUE_MAX + 1)];
+
+    int locale_len = __system_property_get("persist.sys.locale", buf);
+    if (locale_len == 0) {
+      int lang_len = __system_property_get("persist.sys.language", buf);
+      if(lang_len == 0) {
         return ASCIILiteral("en-US");
+      }
+      int country_len = __system_property_get("persist.sys.country", buf + lang_len + 1);
+      if(country_len != 0) {
+        buf[lang_len] = '-';
+      }
+    }
 
-    String normalizedDefault = localeDefault;
-    normalizedDefault.replace('_', '-');
-    normalizedDefault.truncate(normalizedDefault.find('.'));
-    return normalizedDefault;
+    return String(buf);
 }
 
 Vector<String> platformUserPreferredLanguages()
diff -aur target-org/webkit/Source/WTF/wtf/StackTrace.cpp webkit/Source/WTF/wtf/StackTrace.cpp
--- target-org/webkit/Source/WTF/wtf/StackTrace.cpp	2017-06-27 13:38:15.000000000 +0200
+++ webkit/Source/WTF/wtf/StackTrace.cpp	2017-06-27 13:39:41.000000000 +0200
@@ -33,7 +33,6 @@
 #if HAVE(BACKTRACE_SYMBOLS) || HAVE(DLADDR)
 #include <cxxabi.h>
 #include <dlfcn.h>
-#include <execinfo.h>
 #endif
 
 namespace WTF {
diff -aur target-org/webkit/Source/cmake/FindICU.cmake webkit/Source/cmake/FindICU.cmake
--- target-org/webkit/Source/cmake/FindICU.cmake	2017-06-27 13:37:41.000000000 +0200
+++ webkit/Source/cmake/FindICU.cmake	2017-06-27 13:39:41.000000000 +0200
@@ -25,7 +25,7 @@
 # Look for the library.
 find_library(
     ICU_LIBRARY
-    NAMES libicuuc cygicuuc cygicuuc32 icuuc
+    NAMES libicuuc cygicuuc cygicuuc32 icuuc icuuc_jsc
     HINTS ${PC_ICU_LIBRARY_DIRS}
           ${PC_ICU_LIBDIR}
           ${WEBKIT_LIBRARIES_LINK_DIR}
@@ -51,7 +51,7 @@
     pkg_check_modules(PC_ICU_I18N icu-i18n)
     find_library(
         ICU_I18N_LIBRARY
-        NAMES icui18n libicui18n libicuin cygicuin cygicuin32 icuin
+        NAMES icui18n libicui18n libicuin cygicuin cygicuin32 icuin icui18n_jsc
         HINTS ${PC_ICU_I18N_LIBRARY_DIRS}
               ${PC_ICU_I18N_LIBDIR}
               ${WEBKIT_LIBRARIES_LINK_DIR}
@@ -68,7 +68,7 @@
     # Look for the ICU data libraries
     find_library(
         ICU_DATA_LIBRARY
-        NAMES icudata libicudata cygicudata cygicudata32
+        NAMES icudata libicudata cygicudata cygicudata32 icudata_jsc
         HINTS ${PC_ICU_I18N_LIBRARY_DIRS}
               ${PC_ICU_I18N_LIBDIR}
               ${WEBKIT_LIBRARIES_LINK_DIR}
diff -aur target-org/webkit/Source/cmake/OptionsJSCOnly.cmake webkit/Source/cmake/OptionsJSCOnly.cmake
--- target-org/webkit/Source/cmake/OptionsJSCOnly.cmake	2017-06-27 13:37:41.000000000 +0200
+++ webkit/Source/cmake/OptionsJSCOnly.cmake	2017-06-27 13:49:04.000000000 +0200
@@ -23,7 +23,11 @@
 set(ENABLE_WEBCORE OFF)
 set(ENABLE_WEBKIT OFF)
 set(ENABLE_WEBKIT2 OFF)
-set(ENABLE_API_TESTS ON)
+set(ENABLE_API_TESTS OFF)
+set(ENABLE_SAMPLING_PROFILER OFF)
+set(ENABLE_DFG_JIT OFF)
+set(ENABLE_FTL_JIT OFF)
+set(ENABLE_JIT ON)
 
 if (WTF_CPU_X86 OR WTF_CPU_X86_64)
     SET_AND_EXPOSE_TO_BUILD(USE_UDIS86 1)
